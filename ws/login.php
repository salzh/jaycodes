<?php
require_once('Connections/db.php');

session_start();
if (empty($_SESSION['session_id'])) {
    session_regenerate_id();
    $_SESSION['session_id'] = session_id();
    header("Location: /ws/login.php?action=LogIn", TRUE, 301);
}


if (!isset($_SESSION["ws_login"]) || $_SESSION["ws_login"] != true) {
	$url_action = 'LogIn';
} else {
	
	$url_action = (empty($_REQUEST['action'])) ? 'HomePage' : $_REQUEST['action'];
	if ($_SESSION["ws_login"] == true && $url_action != 'LogOut') {
		 header("Location: /ws/ws.php", TRUE, 301);
	}
}

if (isset($url_action)) {    
    if (is_callable($url_action)) {
        call_user_func($url_action);
    } else {
        print 'Function does not exist, request terminated';
    }
}


function LogIn($url='') {
    $session_id = $_SESSION['session_id'];
    while (!IsAuthenticated()) {
        header('WWW-Authenticate: Basic realm="Recording"'); 
        header('HTTP/1.1 401 Unauthorized');
        die('Authorization Required');
    }
    
    $_SESSION[ws_login] = true;
	$_SESSION[extension] = $_SERVER['PHP_AUTH_USER'] ? $_SERVER['PHP_AUTH_USER'] : $_REQUEST[Username];
    if (!empty($url)) {
        return TRUE;
    } else {
        header("Location: /ws/ws.php", TRUE, 301);    
    }
}    

function LogOut() {
    session_destroy(); 
	session_unset();
    SecureContent();   
}

function SecureContent() {
    if (LogIn("SecureContent")) {
        print '<h1>Secure Content</h1>';
        print '<p>This is secure content</p>';
        print '<p><a href="login.php">Login</a></p>';
    } else {
        print '<h1>Not Authorized</h1>';
    }
}

function IsAuthenticated() {
    if (isset($_SERVER['PHP_AUTH_USER']) && isset($_SERVER['PHP_AUTH_PW'])) {
        $httpd_username = filter_var($_SERVER['PHP_AUTH_USER'], FILTER_SANITIZE_STRING, FILTER_FLAG_ENCODE_HIGH|FILTER_FLAG_ENCODE_LOW);
        $httpd_password = filter_var($_SERVER['PHP_AUTH_PW'], FILTER_SANITIZE_STRING, FILTER_FLAG_ENCODE_HIGH|FILTER_FLAG_ENCODE_LOW);
		
		return http_authenticate($_SERVER['PHP_AUTH_USER'],$_SERVER['PHP_AUTH_PW'],$pass_file='/etc/nginx/htpasswd_recordings',$crypt_type='PLAIN');

        /*if ($httpd_username == "test" && $httpd_password == "test") {
            return TRUE;
        } else {
            return FALSE;
        }*/
    } elseif(isset($_REQUEST['Username']) && isset($_REQUEST['Password'])) {
		$httpd_username = $_REQUEST[Username];
		$httpd_password = $_REQUEST[Password];
		return http_authenticate($httpd_username,$httpd_password,$pass_file='/etc/nginx/htpasswd_recordings',$crypt_type='PLAIN');
	}
    return FALSE;
}

/**
 * Authenticate a user against a password file generated by Apache's httpasswd
 * using PHP rather than Apache itself.
 *
 * @param string $user The submitted user name
 * @param string $pass The submitted password
 * @param string $pass_file='.htpasswd' The system path to the htpasswd file
 * @param string $crypt_type='DES' The crypt type used to create the htpasswd file
 * @return bool
 */


function http_authenticate($user,$pass,$pass_file='.htpasswd',$crypt_type='DES') {
	global $db;
	
	$result = mysqli_query($db, "select * from sip where id='$user' and keyword='secret' and data='$pass'") or  die(mysqli_error($db));
	$rows    = mysqli_num_rows($result);
	
	if ($rows > 0) {
		return TRUE;
	} else {
		return FALSE;
	}
		  
}

?>
